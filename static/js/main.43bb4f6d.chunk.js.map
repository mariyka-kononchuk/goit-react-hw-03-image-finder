{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.js","components/Modal/Modal.js","components/Loader/Loader.js","components/IconButton/IconButton.js","icons/search.svg","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","services/images-api.js","components/ImageGallery/ImageGallery.js","components/App/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","currentTarget","target","console","log","window","addEventListener","this","removeEventListener","createPortal","onClick","Component","SpinnerLoader","type","color","height","width","IconButton","allyProps","defaultProps","Searchbar","state","searchName","handleNameChange","setState","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","onSubmit","name","onChange","autocomplete","autofocus","placeholder","ImageGalleryItem","src","alt","Button","baseUrl","axios","defaults","baseURL","apiKey","fetchImages","page","a","queryParams","url","fetch","then","response","ok","json","Promise","reject","Error","ImageGallery","images","status","toggleLoadMore","setTimeout","result","hits","catch","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","prevState","prevName","nextName","map","image","previewURL","tags","App","filter","showModal","toggleModal","handleSearchSubmit","loading","autoClose","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.43bb4f6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__292Di\"};","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={s.container}>{children}</div>;\r\n\r\nexport default Container;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport '../../styles.css';\r\n//import s from './ContactList.module.css';\r\n//import ImageGalleryItem from '../ImageGalleryItem';\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component  {\r\n    \r\n    componentDidMount() {\r\n        console.log('Modal componentDidMount');\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('Modal componentWillUnmount');\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    handleBackdropClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return createPortal(\r\n\r\n            <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n                <div className=\"Modal\">\r\n                    {this.props.children}\r\n                {/* <img src={src} alt={alt} /> */}\r\n                </div>\r\n            </div>, modalRoot\r\n        )\r\n    }  \r\n}\r\n\r\n// ImageGallery.propTypes = {\r\n//     contacts: PropTypes.arrayOf(\r\n//         PropTypes.shape({\r\n//             id: PropTypes.string.isRequired,\r\n//         })\r\n//     ),\r\n//     onDeleteContact:PropTypes.func.isRequired\r\n// };\r\n\r\nexport default Modal;","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport React from 'react';\r\n\r\n\r\nconst SpinnerLoader = () => (\r\n    // <Loader\r\n    //     type=\"Puff\"\r\n    //     color=\"#00BFFF\"\r\n    //     height={100}\r\n    //     width={100}\r\n    //     timeout={3000} //3 secs\r\n    // />\r\n    <Loader className=\"Loader\" type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} />\r\n)\r\n\r\nexport default SpinnerLoader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import s from './ContactList.module.css';\r\n\r\nconst IconButton = ({ children, onClick, ...allyProps }) => {\r\n    <button type =\"button\" className=\"IconButton\" onClick={onClick} {...allyProps}>\r\n        {children}\r\n    </button>\r\n}\r\n\r\nIconButton.defaultProps = {\r\n    onClick: () => null,\r\n    children: null,\r\n};\r\n\r\nIconButton.propTypes = {\r\n    onClick: PropTypes.func,\r\n    children: PropTypes.node,\r\n    'aria-label': PropTypes.string.isRequired,\r\n}\r\n\r\nexport default IconButton;","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSearch(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    overflow: \"hidden\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-search\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"var(--color1, #fff)\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M14.667 25.333c5.891 0 10.667-4.776 10.667-10.667S20.558 3.999 14.667 3.999v0C8.776 3.999 4 8.775 4 14.666s4.776 10.667 10.667 10.667v0zM28 28l-5.8-5.8\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearch);\nexport default __webpack_public_path__ + \"static/media/search.b29b4c95.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react';\r\nimport PropTypes, { string } from 'prop-types';\r\nimport IconButton from '../IconButton/IconButton';\r\nimport { ReactComponent as SearchIcon } from '../../icons/search.svg';\r\nimport { toast } from 'react-toastify';\r\n\r\n//import s from './ContactList.module.css';\r\n\r\nexport default class Searchbar extends Component {\r\n    state = {\r\n        searchName: '',\r\n    };\r\n\r\n    handleNameChange = e => {\r\n        this.setState({ searchName: e.currentTarget.value.toLowerCase() })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (this.state.searchName.trim() === '') {\r\n            return toast.error('Введите слово в поиск');\r\n        }\r\n        this.props.onSubmit(this.state.searchName);\r\n        //this.props.onSubmit(this.state.searchName);\r\n        this.setState({ searchName: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        name=\"searchName\"\r\n                        value={this.state.searchName}\r\n                        onChange = {this.handleNameChange}\r\n                        autocomplete=\"off\"\r\n                        autofocus\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                    {/* <IconButton type = \"submit\" onClick={this.props.onSubmit} aria-label=\"Search images\">\r\n                        <SearchIcon width=\"40\" height=\"40\" fill=\"black\" />\r\n                    </IconButton> */}\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\n   \r\n\r\n\r\n// Searchbar.propTypes = {\r\n//     contacts: PropTypes.arrayOf(\r\n//         PropTypes.shape({\r\n//             id: PropTypes.string.isRequired,\r\n//         })\r\n//     ),\r\n//     onDeleteContact:PropTypes.func.isRequired\r\n// };\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import s from './ContactListItem.module.css';\r\n\r\nconst ImageGalleryItem = ({ src, alt}) => (\r\n    <img src={src} alt={alt} className=\"ImageGalleryItem-image\" />\r\n)\r\n\r\n// ImageGalleryItem.propTypes = {\r\n//   contacts: PropTypes.shape({\r\n//     id: PropTypes.string.isRequired,\r\n//     name: PropTypes.string.isRequired,\r\n//     number: PropTypes.string.isRequired\r\n//   }),\r\n//     onDeleteContact:PropTypes.func.isRequired\r\n// };\r\n\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Button = ({ onClick}) => (\r\n    <button type=\"button\" onClick ={onClick}>Load More</button>\r\n)\r\n\r\nexport default Button;","import axios from \"axios\";\r\nconst baseUrl = \"https://pixabay.com/api/\";\r\naxios.defaults.baseURL = baseUrl;\r\nconst apiKey = \"22651538-53630abe578d2561aeb41817a\";\r\n\r\n\r\nexport async function fetchImages(name, page) {\r\n    let queryParams = `?key=${apiKey}&q=${name}&image_type=photo&per_page=12&page=${page}&orientation=horizontal&safesearch=true`;\r\n    let url = baseUrl + queryParams;\r\n    return await fetch(url)\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        return response.json();\r\n                    }\r\n                    return Promise.reject(\r\n                        new Error('Извините, по вашему запросу ничего не найдено'),\r\n                    );\r\n                })\r\n                \r\n    // axios  \r\n            // try {\r\n            //     const response = await axios.get(url);\r\n            //     const images = response.data.hits;\r\n            //     console.log(images);\r\n            //     this.setState({ images, status: 'resolved' });\r\n            // } catch (error) {\r\n            //     this.setState({ status: 'rejecting' });\r\n            //     throw error;\r\n            // }\r\n            // if (this.state.images.length === 0) {\r\n            //     return toast.error('Извините, по вашему запросу ничего не найдено');\r\n            // }\r\n}","import React, { Component }  from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from \"axios\";\r\n//import s from './ContactList.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport LoadMoreButton from '../Button';\r\nimport SpinnerLoader from '../Loader';\r\nimport { toast } from 'react-toastify';\r\nimport {fetchImages} from '../../services/images-api'\r\n\r\n\r\n// const baseUrl = \"https://pixabay.com/api/\";\r\n// axios.defaults.baseURL = baseUrl;\r\n// const apiKey = \"22651538-53630abe578d2561aeb41817a\";\r\n\r\nexport default class ImageGallery extends Component {\r\n    state = {\r\n        images: null,\r\n        // loading: false,\r\n        error: null,\r\n        page:1,\r\n        status: 'idle'\r\n  }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const prevName = prevProps.searchName;\r\n        const nextName = this.props.searchName;\r\n\r\n        if (prevName !== nextName) {\r\n            this.setState({ status: 'pending', page:1 });\r\n            fetchImages(nextName, this.state.page)\r\n            .then((images) => {\r\n                    this.setState({ images: images.hits, status: 'resolved' });\r\n                    console.log(this.state.images);})\r\n                        \r\n            .catch (error => this.setState({ error, status: 'rejected' }))\r\n        } \r\n        // setTimeout( ()=> {if (this.state.images.length === 0) {\r\n        //     return toast.error('Извините, по вашему запросу ничего не найдено')\r\n        // }}, 2000);\r\n    }\r\n\r\n    toggleLoadMore = () => {\r\n        this.setState({ status: 'pending', page: this.state.page + 1 });\r\n        \r\n        setTimeout( ()=> fetchImages(this.props.searchName, this.state.page)\r\n            .then((images) => {\r\n                let result = [...this.state.images, ...images.hits];\r\n                this.setState({ images:result, status: 'resolved' });\r\n                console.log(this.state.images);})\r\n                        \r\n            .catch(error => this.setState({ error, status: 'rejected' })), 2000)\r\n        \r\n        window.scrollTo({\r\n  top: document.documentElement.scrollHeight,\r\n  behavior: 'smooth',\r\n});\r\n    }\r\n            \r\n      \r\n    render() {\r\n        const { images, status } = this.state;\r\n\r\n        if (status === 'idle') {\r\n            return <div></div>\r\n        }\r\n\r\n        if (status === 'pending') {\r\n            return <SpinnerLoader />\r\n        }\r\n\r\n        if (status === 'rejected') {\r\n            return toast.error('Извините, по вашему запросу ничего не найдено');\r\n        }\r\n\r\n        if (status === 'resolved') {\r\n            return (\r\n                <div>\r\n                    <ul className=\"GalleryList\" >\r\n                        {images.map(image=> (\r\n                            <li className=\"ImageGalleryItem\" key={image.previewURL} >\r\n                                <ImageGalleryItem src={image.previewURL} alt={image.tags} />\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <LoadMoreButton onClick={this.toggleLoadMore} />\r\n                    \r\n               </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// ImageGallery.propTypes = {\r\n//     contacts: PropTypes.arrayOf(\r\n//         PropTypes.shape({\r\n//             id: PropTypes.string.isRequired,\r\n//         })\r\n//     ),\r\n//     onDeleteContact:PropTypes.func.isRequired\r\n// };\r\n\r\n","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\n\n//import s from './App.module.css';\n\nimport Container from '../Container';\n\nimport Modal from '../Modal';\nimport Loader from '../Loader';\nimport Searchbar from '../Searchbar';\nimport ImageGallery from '../ImageGallery';\n\nconst baseUrl = \"https://pixabay.com/api/\";\naxios.defaults.baseURL = baseUrl;\nconst apiKey = \"22651538-53630abe578d2561aeb41817a\";\n\nclass App extends Component {\n\n  state = {\n    searchName: '',\n    images: null,\n    filter: '',\n    showModal: false,\n  }\n\n  toggleModal = () => {\n    this.setState(({showModal}) => ({\n      showModal: !showModal,\n    }))\n  }\n\n  handleSearchSubmit = searchName => {\n    this.setState({ searchName });\n  }\n  \n  render() {\n    const { searchName, showModal, images, loading } = this.state;\n    \n    return (\n      <Container>\n        <div>\n          <Searchbar onSubmit={this.handleSearchSubmit} />\n          <ToastContainer autoClose={3000}/>\n          <ImageGallery searchName={searchName} />\n          \n          <button type=\"button\" onClick ={this.toggleModal}>\n          Open modal\n          </button>\n          {showModal && <Modal onClose = {this.toggleModal}>\n            <h1> Hello</h1>\n            <img src=\"\" alt=\"\" />\n            <button type=\"button\" onClick={this.toggleModal}>Close Modal\n            </button>\n          </Modal>}\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\n//real DOM\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}