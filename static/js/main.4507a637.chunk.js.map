{"version":3,"sources":["components/Modal/Modal.styled.jsx","components/Modal/Modal.js","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.styled.jsx","components/Button/Button.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.js","services/images-api.js","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.js","components/App/App.styled.jsx","components/App/App.js","index.js"],"names":["Overlay","styled","div","WindowModal","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","onClick","children","Component","Header","header","SearchForm","form","SearchFormButton","button","Label","span","Input","input","Searchbar","state","searchName","handleNameChange","setState","value","toLowerCase","handleSubmit","preventDefault","trim","toast","style","borderRadius","background","color","onSubmit","type","name","onChange","autocomplete","autoFocus","placeholder","ItemImage","img","Item","li","ImageGalleryItem","src","alt","largeImage","LoadMoreButton","Button","Spinner","SpinnerLoader","height","width","baseUrl","axios","defaults","baseURL","apiKey","fetchImages","page","a","queryParams","url","fetch","then","response","ok","json","Promise","reject","Error","List","ul","ImageGallery","images","error","searchResult","status","spinner","myRef","createRef","toggleLoadMore","scrollToRef","current","scrollIntoView","behavior","block","prevProps","prevState","prevName","nextName","prevPage","nextPage","data","newImages","hits","catch","total","length","map","image","webformatURL","tags","onSelect","largeImageURL","id","ref","Container","App","selectedImage","handleSearchSubmit","handleSelectImage","imageUrl","toggleModal","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4507a637.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nexport const Overlay = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n    z-index: 1200;\r\n`\r\n\r\nexport const WindowModal = styled.div`\r\n    max-width: calc(100vw - 48px);\r\n    max-height: calc(100vh - 24px);\r\n`","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport {Overlay, WindowModal} from './Modal.styled'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component  {\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    handleBackdropClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return createPortal(\r\n            <Overlay onClick={this.handleBackdropClick}>\r\n                <WindowModal>\r\n                    {this.props.children}\r\n                </WindowModal>\r\n            </Overlay>, modalRoot\r\n        )\r\n    }  \r\n}\r\n\r\nModal.propTypes = {\r\n    onClose:PropTypes.func.isRequired\r\n};\r\n\r\nexport default Modal;","import styled from '@emotion/styled'\r\n\r\nexport const Header = styled.header`\r\n    top: 0;\r\n    left: 0;\r\n    position: sticky;\r\n    z-index: 1100;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 64px;\r\n    padding-right: 24px;\r\n    padding-left: 24px;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    color: #fff;\r\n    background-color: #3f51b5;\r\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\r\n        0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`\r\nexport const SearchForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: 600px;\r\n    background-color: #fff;\r\n    border-radius: 3px;\r\n    overflow: hidden;\r\n`\r\nexport const SearchFormButton = styled.button`\r\n    display: inline-block;\r\n    width: 48px;\r\n    height: 48px;\r\n    border: 0;\r\n    background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n    background-size: 40%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    opacity: 0.6;\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    cursor: pointer;\r\n    outline: none;\r\n\r\n    &:hover{\r\n        opacity: 1;\r\n    }\r\n`\r\nexport const Label = styled.span`\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    white-space: nowrap;\r\n    clip-path: inset(50%);\r\n    border: 0;\r\n`\r\nexport const Input = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    font: inherit;\r\n    font-size: 20px;\r\n    border: none;\r\n    outline: none;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n\r\n    ::placeholder{\r\n        font: inherit;\r\n        font-size: 18px;\r\n    }\r\n`","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport toast from 'react-hot-toast';\r\nimport { Header, SearchForm, SearchFormButton, Label, Input } from './Searchbar.styled'\r\n//import IconButton from '../IconButton/IconButton';\r\n//import { ReactComponent as SearchIcon } from '../../icons/search.svg';\r\n\r\nexport default class Searchbar extends Component {\r\n    state = {\r\n        searchName: '',\r\n    };\r\n\r\n    handleNameChange = e => {\r\n        this.setState({ searchName: e.currentTarget.value.toLowerCase() })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (this.state.searchName.trim() === '') {\r\n            return toast('Введите слово в поиск', {\r\n                style: {\r\n                    borderRadius: '10px',\r\n                    background: '#333',\r\n                    color: '#fff',\r\n                }\r\n            });\r\n        }\r\n        this.props.onSubmit(this.state.searchName);\r\n        this.setState({ searchName: '' });\r\n    }\r\n\r\n    render() {\r\n        const { searchName } = this.state;\r\n        return (\r\n            <Header>\r\n                <SearchForm  onSubmit={this.handleSubmit}>\r\n                    <SearchFormButton type=\"submit\">\r\n                        <Label>Search</Label>\r\n                    </SearchFormButton>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name={searchName}\r\n                        value={searchName}\r\n                        onChange = {this.handleNameChange}\r\n                        autocomplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                    {/* <IconButton type = \"submit\" onClick={this.props.onSubmit} aria-label=\"Search images\">\r\n                        <SearchIcon width=\"40\" height=\"40\" fill=\"black\" />\r\n                    </IconButton> */}\r\n                </SearchForm>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    searchName: PropTypes.string,\r\n    onSubmit: PropTypes.func,\r\n    onChange:PropTypes.func\r\n};\r\n\r\n","import styled from '@emotion/styled'\r\n\r\nexport const ItemImage = styled.img`\r\nwidth: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`\r\nexport const Item = styled.li`\r\n    display: grid;\r\n    max-width: calc(100vw - 48px);\r\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n    grid-gap: 16px;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  `\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Item, ItemImage} from './ImageGalleryItem.styled'\r\n\r\nconst ImageGalleryItem = ({ src, alt, largeImage, onClick }) => (\r\n    <Item onClick={() => onClick({ largeImage }) }  >\r\n        <ItemImage src={src} alt={alt} />\r\n    </Item>\r\n)\r\n\r\nImageGalleryItem.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    largeImage: PropTypes.string,\r\n    onClick:PropTypes.func.isRequired\r\n};\r\n\r\nexport default ImageGalleryItem;","\r\nimport styled from '@emotion/styled'\r\n\r\n\r\nexport const LoadMoreButton = styled.button`\r\n  padding: 8px 16px;\r\n    border-radius: 2px;\r\n    background-color: #3f51b5;\r\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    text-align: center;\r\n    display: block;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    color: #fff;\r\n    border: 0;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    font-family: inherit;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    min-width: 180px;\r\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14),\r\n    0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n      &:hover, focus {\r\n        background-color: #303f9f;\r\n      }\r\n`\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {LoadMoreButton} from './Button.styled'\r\n\r\n\r\nconst Button = ({onClick}) => (\r\n    <LoadMoreButton type=\"button\" onClick ={onClick}>Load More</LoadMoreButton>\r\n)\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n    onClick:PropTypes.func.isRequired\r\n};","import styled from '@emotion/styled'\r\n\r\nexport const Spinner = styled.div`\r\n    width:80px;\r\n    margin-left:auto;\r\n    margin-right:auto;\r\n`","import React from 'react';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport {Spinner} from './Loader.styled.jsx'\r\n\r\nconst SpinnerLoader = () => (\r\n    <Spinner>\r\n        <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n    </Spinner>\r\n)\r\n\r\nexport default SpinnerLoader;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"https://pixabay.com/api/\";\r\naxios.defaults.baseURL = baseUrl;\r\nconst apiKey = \"22651538-53630abe578d2561aeb41817a\";\r\n\r\n\r\nexport async function fetchImages(name, page) {\r\n    let queryParams = `?key=${apiKey}&q=${name}&image_type=photo&per_page=12&page=${page}&orientation=horizontal&safesearch=true`;\r\n    let url = baseUrl + queryParams;\r\n    return await fetch(url)\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        return response.json();\r\n                    }\r\n                    return Promise.reject(\r\n                        new Error('Извините, по вашему запросу ничего не найдено'),\r\n                    );\r\n                })\r\n                \r\n    // axios  \r\n            // try {\r\n            //     const response = await axios.get(url);\r\n            //     const images = response.data.hits;\r\n            //     console.log(images);\r\n            //     this.setState({ images, status: 'resolved' });\r\n            // } catch (error) {\r\n            //     this.setState({ status: 'rejecting' });\r\n            //     throw error;\r\n            // }\r\n            // if (this.state.images.length === 0) {\r\n            //     return toast.error('Извините, по вашему запросу ничего не найдено');\r\n            // }\r\n}","import styled from '@emotion/styled'\r\n\r\n\r\nexport const List = styled.ul`\r\n    display: grid;\r\n    width: 1320px;\r\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\r\n    grid-auto-rows: 260px;\r\n    grid-gap: 12px;\r\n    padding: 0;\r\n    list-style: none;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  `\r\n\r\n\r\n\r\n","import React, { Component, createRef } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport LoadMoreButton from '../Button';\r\nimport SpinnerLoader from '../Loader';\r\n\r\nimport { fetchImages } from '../../services/images-api';\r\nimport {List} from './ImageGallery.styled.jsx'\r\n\r\nexport default class ImageGallery extends Component {\r\n\r\n    \r\n\r\n    state = {\r\n        images: null,\r\n        error: null,\r\n        page: 1,\r\n        searchResult: null,\r\n        status: 'idle',\r\n        spinner: false\r\n    }\r\n\r\n    myRef = createRef();\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const prevName = prevProps.searchName;\r\n        const nextName = this.props.searchName;\r\n        const prevPage = prevState.page;\r\n        const nextPage = this.state.page;\r\n        const images = this.state.images;\r\n\r\n        if (prevPage < nextPage) {\r\n            this.setState({spinner:true});\r\n            fetchImages(nextName, nextPage)\r\n            .then((data) => {\r\n                let newImages = [...images, ...data.hits];\r\n                this.setState({ images: newImages, status: 'resolved', spinner:false });\r\n                this.scrollToRef();\r\n            })\r\n                .catch(error => this.setState({ error, status: 'rejected', spinner:false }))\r\n            ;\r\n        }\r\n\r\n        if (prevName !== nextName) {\r\n            this.setState({ spinner:true, page:1 });\r\n            fetchImages(nextName, nextPage)\r\n                .then((data) => {\r\n                    this.setState({ images: data.hits, searchResult: data.total, status: 'resolved', spinner:false });\r\n                    if (this.state.images.length === 0) {\r\n                    return toast('Извините, по вашему запросу ничего не найдено', {style: {\r\n                                borderRadius: '10px',\r\n                                background: '#333',\r\n                                color: '#fff',\r\n                    },});\r\n                }\r\n            })\r\n            .catch (error => this.setState({ error, status: 'rejected' }))\r\n        }\r\n    }\r\n\r\n    toggleLoadMore = () => {\r\n        this.setState({ spinner:true, page: this.state.page + 1 });\r\n    }\r\n\r\n    scrollToRef = () => {\r\n        this.myRef.current.scrollIntoView({behavior: \"smooth\", block: \"end\"});\r\n    }\r\n    \r\n    render() {\r\n        const { images, status, searchResult, spinner } = this.state;\r\n\r\n        if (status === 'idle') {\r\n            return <div></div>\r\n        }\r\n\r\n        if (status === 'rejected') {\r\n            return toast('Извините, по вашему запросу ничего не найдено', {style: {\r\n                                borderRadius: '10px',\r\n                                background: '#333',\r\n                                color: '#fff',\r\n                            },\r\n            });\r\n        }\r\n\r\n        if (status === 'resolved') {\r\n            return (\r\n                <div>\r\n                    <List >\r\n                        {images.map(image=> (\r\n                            <ImageGalleryItem src={image.webformatURL} alt={image.tags} onClick={() => this.props.onSelect(image.largeImageURL)} key={image.id}/>\r\n                        ))}\r\n                    </List>\r\n                    {spinner && <SpinnerLoader /> }\r\n                    <div ref={this.myRef} >{searchResult>12 && <LoadMoreButton onClick={this.toggleLoadMore} />}</div>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n    onSelect: PropTypes.func,\r\n    searchName: PropTypes.string.isRequired,\r\n};\r\n\r\n","import styled from '@emotion/styled'\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n\n  // margin-left: auto;\n  // margin-right: auto;\n  // padding-top: 20px;\n  // padding-left: 15px;\n  // padding-right: 15px;\n  // width: 1280px;\n`;\n","import React, { Component } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Toaster } from 'react-hot-toast';\nimport Modal from '../Modal';\nimport Searchbar from '../Searchbar';\nimport ImageGallery from '../ImageGallery';\nimport {Container} from './App.styled'\n\nclass App extends Component {\n\n  state = {\n    searchName: '',\n    images: null,\n    selectedImage:null\n  }\n\n  handleSearchSubmit = searchName => {\n    this.setState({ searchName });\n  }\n\n  handleSelectImage = imageUrl => {\n    this.setState({ selectedImage: imageUrl })\n  }\n\n  toggleModal = () => this.setState({ selectedImage: null });\n\n  render() {\n    const { searchName, selectedImage  } = this.state;\n    \n    return (\n      <Container>\n        \n          <Searchbar onSubmit={this.handleSearchSubmit} />\n          <ImageGallery searchName={searchName} onSelect={this.handleSelectImage}/>\n          {selectedImage && <Modal onClose = {this.toggleModal}>\n            <img src={selectedImage} alt=\"\" />\n          </Modal>}\n          <Toaster/>\n        \n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\n//real DOM\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}